# -*- coding: utf-8 -*-


import brainpy as bp
import matplotlib.pyplot as plt
import numpy as np
from scipy import optimize

plt.rcParams.update({"font.size": 15})
plt.rcParams['font.sans-serif'] = ['Times New Roman']

points = [
  -102.86376811594201, -1.0434782608695627,
  -80.12869565217389, -12.40579710144928,
  -75.2405797101449, 3.0144927536231876,
  -66.85449275362316, 0.5797101449275317,
  -63.6614492753623, -0.6376811594203105,
  -64.09391304347824, -6.318840579710155,
  -43.7286956521739, -12.40579710144928,
  -24.10550724637679, -8.34782608695653,
  -23.735652173912996, -13.623188405797094,
  -17.328695652173906, -12.40579710144928,
  -14.082318840579688, -4.28985507246378,
  -19.382028985507247, -21.739130434782624,
  -12.226086956521726, -29.449275362318843,
  -5.846956521739088, -33.10144927536231,
  -7.788985507246366, -22.956521739130437,
  -4.577391304347799, -20.927536231884062,
  -3.3426086956521317, -14.840579710144908,
  -4.528695652173894, -12.40579710144928,
  -3.6568115942028783, 0.17391304347825098,
  -3.8863768115942037, -40,
  6.513623188405802, 100,
  8.074202898550709, 93.10144927536231,
  2.4463768115942344, 88.231884057971,
  8.013913043478254, 82.55072463768116,
  7.946666666666658, 70.78260869565217,
  -1.627826086956503, 75.24637681159419,
  6.260869565217405, 55.768115942028984,
  7.0469565217391334, 53.33333333333333,
  7.819130434782608, 48.46376811594203,
  16.98666666666668, 42.78260869565216,
  16.537971014492797, 34.26086956521739,
  7.728695652173911, 32.63768115942028,
  6.126376811594213, 32.231884057971,
  4.512463768115964, 29.797101449275345,
  5.259130434782605, 20.463768115942003,
  8.05681159420294, 20.05797101449275,
  -3.126956521739089, 22.89855072463766,
  7.55478260869566, 2.202898550724626,
  26.76173913043479, 3.42028985507244,
  26.028985507246404, 15.188405797101439,
  35.64521739130436, 18.028985507246375,
  57.885217391304366, -9.971014492753653,
  78.00579710144928, 11.130434782608688,
  87.12695652173915, -2.6666666666666856,
  95.96405797101454, 3.826086956521749
]

points = np.asarray(points).reshape(-1, 2)

right_lines = np.asarray([
  2.7281159420290066, 67.53623188405797,
  4.681739130434806, 59.420289855072454,
  8.219130434782642, 48.46376811594203,
  11.758840579710181, 37.913043478260875,
  16.507826086956555, 28.985507246376798,
  22.45913043478265, 20.463768115942003,
  31.610434782608678, 11.942028985507221,
  39.5849275362319, 7.478260869565219,
  50.764057971014495, 3.826086956521749,
  60.75478260869568, 2.202898550724626,
  66.35014492753623, 1.3913043478260931,
  72.74782608695654, 0.985507246376784,
  86.74550724637683, 0.5797101449275317,
])
right_lines = right_lines.reshape(-1, 2)
left_lines = np.asarray([
  -102.06608695652172, -1.4492753623188719,
  -92.86840579710142, -1.8550724637681242,
  -83.67072463768113, -2.2608695652173765,
  -76.07536231884056, -3.0724637681159663,
  -66.47999999999998, -3.8840579710145278,
  -58.886956521739094, -5.1014492753623415,
  -52.491594202898526, -5.9130434782608745,
  -46.09623188405794, -6.724637681159436,
  -36.91014492753621, -9.159420289855092,
  -30.119420289855043, -10.782608695652186,
  -19.74492753623187, -15.246376811594217,
  -16.154202898550693, -16.86956521739131,
  -10.17043478260868, -19.71014492753622,
  -5.3936231884057975, -23.768115942029,
  -3.798260869565212, -24.57971014492753,
])
left_lines = left_lines.reshape(-1, 2)


def f(x, a0, a1):
  return a0 * np.exp(a1 * x)


a_left = optimize.curve_fit(f, left_lines[:, 0], left_lines[:, 1], p0=[-4000, 1])[0]
a_right = optimize.curve_fit(f, right_lines[:, 0], right_lines[:, 1], p0=[4000, -1])[0]

fig, gs = bp.visualize.get_figure(1, 1, 4.5, 6.)
ax = fig.add_subplot(gs[0, 0])
plt.scatter(points[:, 0], points[:, 1], )
plt.plot(left_lines[:, 0], f(left_lines[:, 0], *a_left))
plt.plot(right_lines[:, 0], f(right_lines[:, 0], *a_right))
plt.axhline(0, linestyle='dotted')
plt.axvline(0, linestyle='dotted')
plt.ylabel('$\Delta w_{ij}/w_{ij}$ (%)')
# plt.ylabel('Synaptic Change (%)')
plt.xlabel('$\Delta t \,\, (t_j^f - t_i^f)$')
plt.xlabel('$t_j^f - t_i^f$ (ms)')
ax.spines['top'].set_visible(False)
ax.spines['right'].set_visible(False)
plt.savefig('STDP_data.pdf', transparent=True, dpi=500)
plt.show()
